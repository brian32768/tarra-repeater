# Files here contain secrets so I made this sanitized one to preserve some of the work and share it.
#
# Copy this file to a file with the target machine name, for example
#    cp GENERIC woodson.plumbing.com
# Then edit away.

---
# == Network configuration ==

hostname: "HOSTNAME"
localip: "192.168.1.x"
domain: "DOMAIN.COM"
fqdn_hostname: "{{ hostname }}.{{ domain }}"
mail_from: "fogg@{{ domain }}"
lan: "192.168.1.0/24"

# for the firewall role
iflan: "eth0"
ifwan: "eth1"

# == firewall ==

firewall_local_rules: "# Local LAN\n\
iptables -I INPUT -j ACCEPT -s {{ lan }}\n\
\n\
# HOST: L2TP routes that are probably no longer useful\n\
#iptables -I INPUT -j ACCEPT -s 192.168.89.0/24\n\
#iptables -I INPUT -j ACCEPT -s 192.168.90.0/24\n\
\n\
# HOST: These rules go at the end. (-A option)\n\
# HOST: Squeezebox server needs this\n\
iptables -A INPUT -j ACCEPT -p tcp -m multiport --dport 3483,9000,9090 -m state --state NEW,ESTABLISHED\n\
# bellman: Transmission Torrent needs this\n\
iptables -A INPUT -j ACCEPT -p tcp --dport 51413\n\
iptables -A INPUT -j ACCEPT -p udp --dport 51413\n\
# bellman: Accept DHCP requests (broadcasted so they have no source address)\n\
iptables -A INPUT -i {{ iflan }} -p udp --dport 67 -j ACCEPT\n\
# bellman: I used to enable port 22 access from everywhere but got too many break in attempts.\n\
# bellman: Currently there is a whitelist controlling outside access that lets me in from admin sites.\n\
#iptables -A INPUT -j ACCEPT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED\n\
# bellman: Allow secure HTTP from everywhere, so that we can run phonewall to temporarily whitelist.\n\
iptables -A INPUT -j ACCEPT -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED\n\
iptables -A INPUT -j ACCEPT -p tcp --dport 80  -m conntrack --ctstate NEW,ESTABLISHED\n\
# bellman: Allow openvpn from outside\n\
iptables -A INPUT -j ACCEPT -p tcp --dport 1194  -m conntrack --ctstate NEW,ESTABLISHED\n\
"

# == nginx ==
sitename: "HOST"
ssl_sitename: "{{ hostname }}"
ssl_fqdn: "{{ fqdn_hostname }}"

# == BACKUPS ==
rsync_server: BACKUPS.DOMAIN.COM
rsync_port: 22
rsync_auth_user: "{{ hostname }}"
rsync_module:    "{{ hostname }}"
rsync_password:  "58jhifwaw0i9fjsdbjh&^TGHHVB"
tarfiles: "/etc/asterisk"
additional_groups: ""
backup_user:  "vastra-backup"
backup_group: "vastra-backup"
voicemail_storage: "/var/spool/asterisk/voicemail"

